
@using Decision.Common.Helpers
@using Decision.Common.Security.HiddenField
@using Decision.DomainClasses.Entities.Evaluations
@model  Decision.ViewModel.ArticleEvaluation.AddArticleEvaluationViewModel

@{
    ViewBag.Title = "درج ارزیابی جدید";
    var numericQuestions = Model.Questions.Where(a => a.Type == QuestionType.Number).ToList();
    var stringQuestions = Model.Questions.Where(a => a.Type == QuestionType.Input || a.Type == QuestionType.TextArea).ToList();
    var checkBoxListQuestions = Model.Questions.Where(a => a.Type == QuestionType.CheckBoxList).ToList();
    var radioButtonListQuestions = Model.Questions.Where(a => a.Type == QuestionType.RadioButtonList).ToList();
    var hasNumericQuestion = numericQuestions.Any();
    var hasStringQuestion = stringQuestions.Any();
    var hasRadioButtonListQuestion =  radioButtonListQuestions.Any();
    var hasCheckBoxListQuestion =  checkBoxListQuestions.Any();
}
@section Css{
    @Styles.Render("~/Content/rating")
}


@using (Html.BeginForm(MVC.ArticleEvaluation.Create(), FormMethod.Post, new { @class = "form-horizontal", id = "createArticleEvaluationForm", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ArticleId)

    <div class="panel panel-default">
    <div class="panel-heading">
        <div class="row">
            <div class="col-md-12">
                @Html.HelpAlert(@Url.Content("~/Content/Images/lightbulb.png"),

                               "در این قسمت امکان ارزیابی از مقاله متقاضی در نظر گرفته شده است ، به طوری که سوالات توسط مدیران تایید شده قبلا و در این قسمت قابل مشاهده خواهند بود."
                               , "دقت کنید که بر اساس این ارزیابی ها ، امتیاز متقاضی تغییر خواهد کرد."
                                )
            </div>
        </div>

    </div>
    <div class="panel-body">

    <div class="row">
        <div class="col-md-1">
            <button type="button" id="createArticleEvaluationButton" autocomplete="off" onclick="AjaxForm.CustomSubmit(this, 'createArticleEvaluationForm')" data-loading-text="در حال ارسال اطلاعات" class="btn btn-success">
                ثبت ارزیابی جدید
            </button>
        </div>
    </div>
    <hr class="margin-bottom-5 margin-top-5"/>
    <ul class="nav nav-tabs">
        <li class="active">
            <a href="#baseQuestions" data-toggle="tab">سوالات پایه</a>
        </li>
        @if (hasNumericQuestion)
        {
            <li>
                <a href="#numericQuestions" data-toggle="tab">سوالات امتیازی</a>
            </li>
        }

        @if (hasStringQuestion)
        {
            <li>
                <a href="#stringQuestions" data-toggle="tab">سوالات متنی</a>
            </li>
        }
        @if (hasCheckBoxListQuestion)
        {
            <li>
                <a href="#checkBoxQuestions" data-toggle="tab">سوالات چند انتخابی</a>
            </li>
        }
        @if (hasRadioButtonListQuestion)
        {
            <li>
                <a href="#radioButtonQuestions" data-toggle="tab">سوالات تک انتخابی</a>
            </li>
        }

    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="baseQuestions">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EvaluatorId, htmlAttributes: new {@class = "control-label col-md-1"})
                        <div class="col-md-5">
                            @Html.DropDownListFor(model => model.EvaluatorId, Model.Evaluators, "انتخاب ارزیاب", new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.EvaluatorId, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Content, new {@class = "control-label col-md-1"})
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Content, new {@class = "ckeditor form-control", rows = 5})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Brief, new {@class = "control-label col-md-1"})
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Brief, new {@class = "ckeditor form-control", rows = 3})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StrongPoint, new {@class = "control-label col-md-1"})
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.StrongPoint, new {@class = "ckeditor form-control", rows = 3})
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @if (hasNumericQuestion)
        {
            <div class="tab-pane" id="numericQuestions">
                <div class="row">
                    <div class="col-md-12">
                        @for (var i = 0; i < numericQuestions.Count; i++)
                        {
                            @Html.Hidden(string.Format("NumericQuestions[{0}].Id", i), numericQuestions.ElementAt(i).Id)

                            <label class="control-label col-md-2 text-right-imp">
                                @numericQuestions.ElementAt(i).Title
                            </label>
                            <div class="col-md-4">
                                @Html.TextBox(string.Format("NumericQuestions[{0}].Value", i), 0, new
                                {
                                    @class = "rating",
                                    data_max = "10",
                                    data_min = "0",
                                    data_step = "1",
                                    data_stars = "10",
                                    data_size = "xs",
                                    data_show_clear = "false",
                                    data_show_caption = "false"
                                })
                            </div>

                        }
                    </div>
                </div>
            </div>
        }
        @if (hasStringQuestion)
        {
            <div class="tab-pane" id="stringQuestions">
                <div class="row">
                    @for (var i = 0; i < stringQuestions.Count; i++)
                    {
                        @Html.Hidden(string.Format("StringQuestions[{0}].Id", i), stringQuestions.ElementAt(i).Id)

                        if (stringQuestions.ElementAt(i).Type == QuestionType.TextArea)
                        {

                            <div class="col-md-12">
                                <label class="control-label">
                                    @stringQuestions.ElementAt(i).Title
                                </label>
                                @Html.TextArea(string.Format("StringQuestions[{0}].Value", i), new {@class = "ckeditor form-control", rows = 3})
                            </div>

                        }
                        else
                        {
                            <div class="col-md-12">
                                <label class="control-label">
                                    @stringQuestions.ElementAt(i).Title
                                </label>
                                @Html.TextBox(string.Format("StringQuestions[{0}].Value", i), null, new {@class = "form-control"})
                            </div>

                        }

                    }
                </div>
            </div>
        }
        @if (hasCheckBoxListQuestion)
        {
            <div class="tab-pane" id="checkBoxQuestions">
                <div class="row">
                    <div class="col-md-12">
                        @for (var i = 0; i < checkBoxListQuestions.Count; i++)
                        {
                            @Html.Hidden(string.Format("CheckBoxListQuestions[{0}].Id", i), checkBoxListQuestions.ElementAt(i).Id)

                            <div class="col-md-12">
                                <label class="control-label">
                                    @checkBoxListQuestions.ElementAt(i).Title
                                </label>
                                <div class="row">

                                    @for (var j = 0; j < checkBoxListQuestions.ElementAt(i).AnswerOptions.Count; j++)
                                    {
                                        <div class="col-md-2">
                                            <input type="checkbox"
                                                   id="@string.Format("CheckBoxListQuestions[{0}].OptionIds", i)" name="@string.Format("CheckBoxListQuestions[{0}].OptionIds", i)" value="@checkBoxListQuestions.ElementAt(i).AnswerOptions.ElementAt(j).Id" class="checkbox-inline"/>
                                            <label for="@string.Format("CheckBoxListQuestions[{0}].OptionIds", i)" class="control-label">@checkBoxListQuestions.ElementAt(i).AnswerOptions.ElementAt(j).Name</label>
                                        </div>
                                    }
                                </div>

                            </div>

                        }
                    </div>
                </div>
            </div>
        }
        @if (hasRadioButtonListQuestion)
        {
            <div class="tab-pane" id="radioButtonQuestions">
                <div class="row">
                    <div class="col-md-12">
                        @for (var i = 0; i < radioButtonListQuestions.Count; i++)
                        {
                            @Html.Hidden(string.Format("RadioButtonListQuestions[{0}].Id", i), radioButtonListQuestions.ElementAt(i).Id)

                            <div class="col-md-12">
                                <label class="control-label">
                                    @radioButtonListQuestions.ElementAt(i).Title
                                </label>
                                <div class="row">
                                    @for (var j = 0; j < radioButtonListQuestions.ElementAt(i).AnswerOptions.Count; j++)
                                    {
                                        <div class="col-md-2 ">
                                            @Html.RadioButton(string.Format("RadioButtonListQuestions[{0}].OptionId", i), radioButtonListQuestions.ElementAt(i).AnswerOptions.ElementAt(j).Id, new {@class = "radio-inline"})
                                            @Html.Label(string.Format("RadioButtonListQuestions[{0}].OptionId", i), radioButtonListQuestions.ElementAt(i).AnswerOptions.ElementAt(j).Name, new {@class = "control-label"})
                                        </div>
                                    }
                                </div>

                            </div>

                        }
                    </div>
                </div>
            </div>
        }
    </div>

    </div>


    </div>
}


@section Menu{
<a href="@Url.Action(MVC.ArticleEvaluation.Create(Model.ArticleId))" class="list-group-item thrid-split"><span class="fa fa-plus"></span> درج ارزیابی</a>
<a href="@Url.Action(MVC.Appraiser.List())" class="list-group-item second-split"><span class="fa fa-plus"></span>درج ارزیاب</a>
@{Html.RenderPartial(MVC.Applicant.Views._ApplicantRelatedLinksBuilder, Model.ApplicantId);}
}
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/editor")
    @Scripts.Render("~/bundles/rating")
}
