@using Decision.Common.Helpers
@using Decision.Common.Helpers.Extentions
@using Decision.Web.RazorHelpers
@model Decision.ViewModel.Teacher.EditTeacherViewModel
@{
    ViewBag.Title = "ویرایش استاد";
}
@using (Html.BeginForm(MVC.Teacher.Edit(), FormMethod.Post, new { role = "form", @class = "form-horizontal", autocomplete = "off", id = "editTeacherForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.PhotoScan)
    @Html.HiddenFor(model => model.CopyOfBirthCertificateScan)
    @Html.HiddenFor(model => model.CopyOfNationalCardScan)


    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-12">
                    @Html.HelpAlert(Url.Content("~/Content/Images/lightbulb.png"),
                    "در صورت عمل نکردن دکمه ثبت،توجه داشته باشید که تمام اطلاعات را در تمام تب های موجود صحیح وارد کرده باشید",

         "برای فایل های ضمیمه مربوط به استاد از امکان آپلود تصاویر یا اسکن  میتوانید بهره مند شوید.",
                    "دقت کنید در صورت انتخاب فایل جدید،جایگزین فایل های جدید خواهد شد"
           )
                </div>
            </div>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-1">
                    <button type="button" autocomplete="off" onclick="AjaxForm.CustomSubmit(this, 'editTeacherForm')" data-loading-text="در حال ارسال اطلاعات" class="btn btn-success btn-md">
                        ذخیره تغییرات انجام شده
                    </button>
                </div>
            </div>
            <hr class="margin-bottom-5 margin-top-5" />
            <ul class="nav nav-tabs">
                <li class="active">
                    <a href="#baseInfo" data-toggle="tab">اطلاعات پایه</a>
                </li>
                <li>
                    <a href="#bank" data-toggle="tab">اطلاعات بانکی</a>
                </li>
                <li>
                    <a href="#certificate" data-toggle="tab">اطلاعات شغلی</a>
                </li>
                <li>
                    <a href="#trainingCourse" data-toggle="tab">دوره کارآموزی</a>
                </li>
                <li>
                    <a href="#files" data-toggle="tab">فایل های ضمیمه</a>
                </li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="baseInfo">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxFor(model => model.FirstName)
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxFor(model => model.LastName)
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PersonnelCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxForLtr(model => model.PersonnelCode)
                                    @Html.ValidationMessageFor(model => model.PersonnelCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.NationalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxForLtr(model => model.NationalCode)
                                    @Html.ValidationMessageFor(model => model.NationalCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BirthCertificateNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxForLtr(model => model.BirthCertificateNumber)
                                    @Html.ValidationMessageFor(model => model.BirthCertificateNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Gender, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.MarriageStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.MarriageStatus, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.MarriageStatus, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BirthPlaceState, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.BirthPlaceState,
                            Model.StatesForBirthPlace, "انتخاب استان محل تولد", new
                            {
                                @class = "form-control cascade",
                                data_tofill = "BirthPlaceCity",
                                data_lable = "انتخاب شهر محل تولد",
                                data_selects = "BirthPlaceCity",
                                data_url = Url.Action(MVC.City.GetCities())
                            })
                                    @Html.ValidationMessageFor(model => model.BirthPlaceState, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.BirthPlaceCity, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-3">
                                    @Html.DropDownListFor(model => model.BirthPlaceCity, Model.CitiesForBirthPlace, "انتخاب شهر محل تولد", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BirthPlaceCity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.BirthDate, MVC.Shared.Views.EditorTemplates.PersianDatePicker)
                                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane" id="bank">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxFor(model => model.BankName)
                                    @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BankBranch, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxFor(model => model.BankBranch)
                                    @Html.ValidationMessageFor(model => model.BankBranch, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.NoAutoCompleteTextBoxFor(model => model.AccountNumber)
                                    @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane" id="certificate">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TrainingGPA, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.TrainingGPA)
                                    @Html.ValidationMessageFor(model => model.TrainingGPA, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.TrainigGrade, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.NoAutoCompleteTextBoxForLtr(model => model.TrainigGrade)
                                    @Html.ValidationMessageFor(model => model.TrainigGrade, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CollegiateOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.NoAutoCompleteTextBoxForNumber(model => model.CollegiateOrder)
                                    @Html.ValidationMessageFor(model => model.CollegiateOrder, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.OccupationalGroup, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.NoAutoCompleteTextBoxForNumber(model => model.OccupationalGroup)
                                    @Html.ValidationMessageFor(model => model.OccupationalGroup, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.OfficialYears, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.NoAutoCompleteTextBoxForNumber(model => model.OfficialYears)
                                    @Html.ValidationMessageFor(model => model.OfficialYears, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.CollegiateYears, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.NoAutoCompleteTextBoxForNumber(model => model.CollegiateYears)
                                    @Html.ValidationMessageFor(model => model.CollegiateYears, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PositionId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.PositionId, Model.Positions, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
                                </div>
                               
                                <div class="col-md-4 col-md-offset-2">

                                    @Html.CheckBoxFor(model => model.IsClothed, new { @class = "checkbox-inline" })
                                    @Html.LabelFor(a => a.IsClothed, new { @class = "control-label" })

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="trainingCourse" class="tab-pane">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TrainingCenterState, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.TrainingCenterState, Model.StatesForTrainingCeneter, "انتخاب", new
                   {
                       @class = "form-control cascade",
                       data_tofill = "TrainingCenterCity",
                       data_lable = "انتخاب",
                       data_selects = "TrainingCenterCity,TrainingCenterId,TrainingCourseId",
                       data_url = Url.Action(MVC.City.GetCities())
                   })
                                    @Html.ValidationMessageFor(model => model.TrainingCenterState, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.TrainingCenterCity, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.TrainingCenterCity, Model.CitiesForTrainingCeneter, "انتخاب", new
                   {
                       @class = "form-control cascade",
                       data_tofill = "TrainingCenterId",
                       data_lable = "انتخاب",
                       data_selects = "TrainingCenterId,TrainingCourseId",
                       data_url = Url.Action(MVC.TrainingCenter.GetCenters())
                   })
                                    @Html.ValidationMessageFor(model => model.TrainingCenterCity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.TrainingCenterId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.TrainingCenterId, Model.TrainingCenters, "انتخاب", new
                   {
                       @class = "form-control cascade",
                       data_tofill = "TrainingCourseId",
                       data_lable = "انتخاب",
                       data_selects = "TrainingCourseId",
                       data_url = Url.Action(MVC.TrainingCourse.GetCourses())
                   })
                                    @Html.ValidationMessageFor(model => model.TrainingCenterId, "", new { @class = "text-danger" })
                                </div>
                                @Html.LabelFor(model => model.TrainingCourseId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.TrainingCourseId, Model.TrainingCourses, "انتخاب", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TrainingCourseId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane" id="files">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CopyOfNationalCardFile, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.CopyOfNationalCardFile, new { type = "file", @class = "form-control " })
                                </div>
                                <div class="col-md-4">
                                    <button type="button" autocomplete="off" data-type="image" data-container="CopyOfNationalCardScan" class="btn btn-primary   btn-sm @(Model.CopyOfNationalCardScan.HasValue() ? "scan-remove" : "scan")">
                                        @if (Model.CopyOfNationalCardScan.HasValue())
                                        {<text>
                                <i class="fa fa-remove"></i>
                                حذف فایل اسکن شده
                                        </text>
                                        }
                                        else
                                        {<text>
                                <i class="fa fa-file-photo-o"></i>
                                افزودن اسکن
                                        </text>
                                        }
                                    </button>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CopyOfBirthCertificateFile, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.CopyOfBirthCertificateFile, new { type = "file", @class = "form-control " })
                                </div>
                                <div class="col-md-4">
                                    <button type="button" autocomplete="off" data-type="image" data-container="CopyOfBirthCertificateScan" class="btn btn-primary   btn-sm @(Model.CopyOfNationalCardScan.HasValue() ? "scan-remove" : "scan")">
                                        @if (Model.CopyOfBirthCertificateScan.HasValue())
                                        {<text>
                                <i class="fa fa-remove"></i>
                                حذف فایل اسکن شده
                                        </text>
                                        }
                                        else
                                        {<text>
                                <i class="fa  fa-file-photo-o"></i>
                                افزودن اسکن
                                        </text>
                                        }
                                    </button>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PhotoFile, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.TextBoxFor(model => model.PhotoFile, new { type = "file", @class = "form-control " })
                                </div>
                                <div class="col-md-4">
                                    <button type="button" autocomplete="off" data-type="image" data-container="PhotoScan" class="btn btn-primary   btn-sm @(Model.CopyOfNationalCardScan.HasValue() ? "scan-remove" : "scan")">
                                        @if (Model.PhotoScan.HasValue())
                                        {<text>
                                <i class="fa fa-remove"></i>
                                حذف فایل اسکن شده
                                        </text>
                                        }
                                        else
                                        {<text>
                                <i class="fa fa-file-photo-o"></i>
                                افزودن اسکن
                                        </text>
                                        }
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Menu{
    @{Html.RenderPartial(MVC.Teacher.Views._TeacherRelatedLinksBuilder, Model.Id);}
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datePicker")
}
