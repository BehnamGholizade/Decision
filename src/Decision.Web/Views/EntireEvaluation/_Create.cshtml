@using Decision.Common.Helpers.Extentions
@model Decision.ViewModel.EntireEvaluation.AddEntireEvaluationViewModel

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm(MVC.EntireEvaluation.Create(), FormMethod.Post, new { @class = "form-horizontal", id = "createEntireEvaluationForm", autocomplete = "off", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.TeacherId)
            @Html.HiddenFor(model => model.AttachmentScan)

            <div class="form-group">
                @Html.LabelFor(model => model.Brief, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Brief, new { @class = "form-control ckeditor", rows = 3 })
                    @Html.ValidationMessageFor(model => model.Brief, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control ckeditor", rows = 10 })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Foible, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Foible, new { @class = "form-control ckeditor", rows = 3 })
                    @Html.ValidationMessageFor(model => model.Foible, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StrongPoint, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.StrongPoint, new { @class = "form-control ckeditor", rows = 3 })
                    @Html.ValidationMessageFor(model => model.StrongPoint, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.EvaluatorId, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.EvaluatorId, Model.Evaluators, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EvaluatorId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.EvaluationDate, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.EvaluationDate, MVC.Shared.Views.EditorTemplates.PersianDatePicker)
                    @Html.ValidationMessageFor(model => model.EvaluationDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AttachmentFile, htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.AttachmentFile, new { type = "file", @class = "form-control" })
                </div>
                <div class="col-md-4">
                    <button type="button" autocomplete="off" data-type="pdf" data-container="AttachmentScan" class="btn btn-primary   btn-sm @(Model.AttachmentScan.HasValue() ? "scan-remove" : "scan")">

                        @if (Model.AttachmentScan.HasValue())
                        {<text>
                            <i class="fa fa-remove"></i>
                            حذف فایل اسکن شده
                        </text>
                        }
                        else
                        {<text>
                            <i class="fa fa-file-photo-o"></i>
                            افزودن اسکن
                        </text>
                        }
                    </button>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6 col-md-offset-1">
                    <button type="button" id="createEntireEvaluationButton" autocomplete="off" onclick="formDataSubmit(this, 'createEntireEvaluationForm', '#entireEvaluationList', '#create-entireEvaluation')" data-loading-text="در حال ارسال اطلاعات" class="btn btn-success btn-md">
                        ثبت ارزیابی جدید
                    </button>
                </div>
            </div>
        }
    </div>
</div>
