@using Decision.Common.Helpers
@model Decision.ViewModel.TrainingCenter.EditTrainingCenterViewModel
<div class="col-md-12" id="trainingCenter-@Model.Id">
    @using (Ajax.BeginForm(MVC.TrainingCenter.Edit(), new AjaxOptions { HttpMethod = "POST", OnComplete = "editOnComplete(xhr, status, '" + Model.Id + "','#editButton" + Model.Id + "')" }, new { @class = "form-horizontal", id = Model.Id, autocomplete = "off", data_ajax_update = "trainingCenter-" + Model.Id }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.RowVersion)
        <div class="panel panel-default">

            <div class="panel-heading">
                <h2 class="panel-title">
                    <i class="fa fa-edit"></i>
                </h2>
            </div>

            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CenterName, new {@class = "control-label col-md-3"})
                                    <div class="col-md-9">
                                        @Html.NoAutoCompleteTextBoxFor(model => model.CenterName)
                                        @Html.ValidationMessageFor(model => model.CenterName, null, new {@class = "text-danger"})
                                    </div>
                                </div>

                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Location, new {@class = "control-label col-md-3"})
                                    <div class="col-md-9">
                                        @Html.TextAreaFor(model => model.Location, new {@class = "form-control", @rows = 2})
                                        @Html.ValidationMessageFor(model => model.Location, null, new {@class = "text-danger"})
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PhoneNumber1, new {@class = "control-label col-md-3"})
                                    <div class="col-md-9">
                                        @Html.NoAutoCompleteTextBoxForLtr(model => model.PhoneNumber1)
                                        @Html.ValidationMessageFor(model => model.PhoneNumber1, null, new {@class = "text-danger"})
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PhoneNumber2, new {@class = "control-label col-md-3"})
                                    <div class="col-md-9">
                                        @Html.NoAutoCompleteTextBoxForLtr(model => model.PhoneNumber2)
                                        @Html.ValidationMessageFor(model => model.PhoneNumber2, null, new {@class = "text-danger"})
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.State, new {@class = "control-label col-md-3"})
                                    <div class="col-md-9">
                                        @Html.DropDownListFor(model => model.State, Model.States, "انتخاب استان", new
                                        {
                                            data_url = Url.Action(MVC.City.GetCities()),
                                            data_tofill = "City",
                                            data_lable = "انتخاب شهر",
                                            data_selects = "City",
                                            @class = "form-control cascade",
                                        })
                                        @Html.ValidationMessageFor(model => model.State, null, new {@class = "text-danger"})

                                    </div>

                                </div>

                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.City, new {@class = "control-label col-md-3"})
                                    <div class="col-md-9">
                                        @Html.DropDownListFor(model => model.City, Model.Cities, "انتخاب شهر", new {@class = "form-control"})
                                        @Html.ValidationMessageFor(model => model.City, null, new {@class = "text-danger"})

                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-3"})
                                    <div class="col-md-9">
                                        @Html.TextAreaFor(model => model.Description, new {@class = "form-control", @rows = 2})
                                        @Html.ValidationMessageFor(model => model.Description, null, new {@class = "text-danger"})
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>


            </div>
            <div class="panel-footer ">
                <div class="pull-left">
                    <button type="button" id="@string.Format("editButton{0}",Model.Id)" autocomplete="off" onclick="AjaxForm.CustomSubmit(this, '@Model.Id')" data-loading-text="در حال ارسال اطلاعات" class="btn btn-success btn-sm">
                        <i class="fa fa-check-square-o"></i>
                        ذخیره تغییرات
                    </button>
                    <a class="btn btn-default btn-sm" data-ajax="true"
                       data-ajax-mode="REPLACE-WITH" data-ajax-complete="cancelEditOnComplete(xhr, status)"
                       data-ajax-update="#trainingCenter-@Model.Id" data-ajax-method="POST"
                       href="@Url.Action(MVC.TrainingCenter.CancelEdit(Model.Id))" role="button">
                        <i class="fa fa-arrow-right"></i>
                        انصراف
                    </a>
                </div>
                <div class="clearfix"></div>
            </div>
        </div>
    }

</div>
