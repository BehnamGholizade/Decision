@using System.Configuration
@using System.Web.Mvc
@using Decision.Framework.MvcToolkit.Alerts.Noty
@helper IncludeGoogleAnalytics(WebViewPage page)
{
    var controller = page.ViewContext.Controller;
    var controllerHasAuthorizeAttribute = controller.GetType().GetCustomAttributes(typeof(AuthorizeAttribute), true).Any();
    var currentActionName = page.ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    var actionHasAuthorizeAttribute = controller.GetType()
        .GetMethods()
        .Any(x => x.Name == currentActionName &&
                  x.GetCustomAttributes(typeof(AuthorizeAttribute), true).Any());
    if (controllerHasAuthorizeAttribute || actionHasAuthorizeAttribute)
    {
        return;
    }
    var trackingId = ConfigurationManager.AppSettings["GoogleAnalyticsID"];
    <script type="text/javascript">
        var _gaq = _gaq || [];
        _gaq.push(["_setAccount", '@trackingId']);
        _gaq.push(["_trackPageview"]);
        (function() {
            var ga = document.createElement("script");
            ga.type = "text/javascript";
            ga.async = true;
            ga.src = ("https:" === document.location.protocol ? 'https://ssl' : 'http://www') +
                ".google-analytics.com/ga.js";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(ga, s);
        })();
    </script>
}


@* Generator: MvcHelper GeneratePrettyNames: true *@

@*for using razor generator after creating htmlhlper and run Enable-RazorGenerator
    you should change build action of generated class to complie *@

@helper ShowNotyMessages(Noty notyInput)
{
if (notyInput == null)
{
    return;
}

    <script>
    $(function() {

        @foreach (var message in notyInput.NotyMessages)
            {
                @*@:var  overrideOptions= {};
                @: overrideOptions.layout= '@message.Location';
                @:overrideOptions.type= '@message.Type';
                @:overrideOptions.text='@message.Message';
                @:var overrideAnimation={};
                @:overrideAnimation.open= 'animated @message.OpenAnimation';
                @: overrideAnimation.close= 'animated @message.CloseAnimation';
                @:overrideOptions.maxVisible= @notyInput.MaxVisibleForQueue;
                @:overrideOptions.closeWith= ['@message.CloseWith'];
                @:overrideOptions.buttons= false;
                @:overrideAnimation.speed= @message.AnimateSpeed;

             if (message.IsSwing)
                {
                    @: overrideAnimation.easing='swing';
                                             }

                if (notyInput.DismissQueue)
                {
                    @: overrideOptions.dismissQueue= true;
                                            }
                if (message.IsForce)
                {
                    @:overrideOptions.force= true;
                                           }
                if (message.IsKiller)
                {
                    @:overrideOptions. killer= true;
                                                     }
                if (message.IsModal)
                {
                    @:overrideOptions.modal=true;
                                            }
                if (message.IsSticky)
                {
                    @:overrideOptions.timeout= false;

                }
                 @:overrideAnimation.fadeSpeed=50;
                 @:overrideOptions.animation=overrideAnimation;
                 @:noty(overrideOptions);*@
            @:infoNoty('@message.Message');
                }

    });

    </script>
}